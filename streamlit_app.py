import streamlit as st
import random

# キーワードに関連するなぞなぞデータと解説
riddle_data = {
    "動物": [
        {"riddle": "飛ぶのは得意だけど、足がない動物は？", "answer": "鳥", "explanation": "鳥は飛ぶことができるが、足はありません。羽を使って空を飛ぶため、足は必要ないからです。"},
        {"riddle": "いつも走っているけど、決して疲れない動物は？", "answer": "時計（ネズミ）", "explanation": "時計の針は常に動いていますが、疲れません。ネズミは時計に例えられることがよくあります。"},
        {"riddle": "木に登るのが得意で、バナナが好きな動物は？", "answer": "サル", "explanation": "サルは木登りが得意で、バナナをよく食べます。"}
    ],
    "食べ物": [
        {"riddle": "赤くて甘くて、リーダーが食べることが多い果物は？", "answer": "りんご", "explanation": "りんごは赤くて甘く、また「リーダー」が食べることが多いと言われます。『アダムとイブ』の話にも出てきます。"},
        {"riddle": "中にご飯が入っていて、海苔で巻いているものは？", "answer": "おにぎり", "explanation": "おにぎりはご飯を形を整えて、海苔で包んだ日本の代表的な食べ物です。"},
        {"riddle": "食べると元気が出る、オレンジ色の野菜は？", "answer": "にんじん", "explanation": "にんじんはオレンジ色で、ビタミンAが豊富で目にも良いとされています。"},
    ],
    "自然": [
        {"riddle": "空から降ってきて、濡れるけど食べられるものは？", "answer": "雨", "explanation": "雨は空から降ってきますが、直接食べることはできませんが、水分を含んでいるため生命にとって非常に重要です。"},
        {"riddle": "太陽が西に沈んでいくとき、何が変わる？", "answer": "空の色", "explanation": "太陽が西に沈むと、空の色がオレンジ色や赤色に変わり、美しい夕焼けが見られます。"},
        {"riddle": "みんなが集まってできる、夜空に輝くものは？", "answer": "星", "explanation": "星は夜空に輝き、多くの星座が空に集まって形を作っています。"},
    ],
    "乗り物": [
        {"riddle": "空を飛ぶけれど、羽がない乗り物は？", "answer": "飛行機", "explanation": "飛行機は羽を使って飛ぶことができる乗り物ですが、鳥とは違って、エンジンと翼の力で空を飛びます。"},
        {"riddle": "水の上を走る車のような乗り物は？", "answer": "ボート", "explanation": "ボートは水面を走る乗り物で、手漕ぎやエンジンで進むことができます。"},
        {"riddle": "道路を走る四輪の乗り物は？", "answer": "自動車", "explanation": "自動車は4つのタイヤを持ち、エンジンを使って道路を走る乗り物です。"},
    ],
    "スポーツ": [
        {"riddle": "空中でボールを打つスポーツは？", "answer": "テニス", "explanation": "テニスはラケットを使ってボールを打つスポーツで、空中に打ち上げて相手のコートに返します。"},
        {"riddle": "水の中で泳ぐスポーツは？", "answer": "水泳", "explanation": "水泳は水の中を泳いで競争するスポーツです。"},
        {"riddle": "ボールをゴールに入れるスポーツは？", "answer": "サッカー", "explanation": "サッカーはボールを相手のゴールに入れることを目指すスポーツです。"},
    ],
    "映画": [
        {"riddle": "未来を描いた映画で、タイムマシンが登場する作品は？", "answer": "バック・トゥ・ザ・フューチャー", "explanation": "『バック・トゥ・ザ・フューチャー』はタイムトラベルを題材にした映画で、タイムマシンが重要な役割を果たします。"},
        {"riddle": "恐竜が登場する映画は？", "answer": "ジュラシック・パーク", "explanation": "『ジュラシック・パーク』は、恐竜を復活させたテーマパークが舞台の映画です。"},
        {"riddle": "アニメ映画で、主人公が少年である作品は？", "answer": "千と千尋の神隠し", "explanation": "『千と千尋の神隠し』は、神隠しの世界で少女が成長する話ですが、少年も重要な役割を果たします。"},
    ],
    "天気": [
        {"riddle": "雨の後に現れる、七色の光の帯は？", "answer": "虹", "explanation": "虹は雨が降った後に太陽の光が水滴に反射してできる、七色の帯です。"},
        {"riddle": "風が吹いて、木の葉が舞い散る天気は？", "answer": "風", "explanation": "風は空気の動きで、木の葉を舞い散らせることがあります。"},
        {"riddle": "夏に多い、空に見える白い雲は？", "answer": "入道雲", "explanation": "入道雲は夏に見られる、積乱雲の一種で、雷雨や台風を引き起こすことがあります。"},
    ],
    "楽器": [
        {"riddle": "弦を弾いて音を出す楽器は？", "answer": "ギター", "explanation": "ギターは弦楽器で、弦を弾いて音を出します。"},
        {"riddle": "息を吹き込んで音を出す楽器は？", "answer": "トランペット", "explanation": "トランペットは金管楽器で、息を吹き込むことで音を出します。"},
        {"riddle": "鍵盤を押して音を出す楽器は？", "answer": "ピアノ", "explanation": "ピアノは鍵盤楽器で、鍵盤を押すことで音が鳴ります。"},
    ],
    "科学": [
        {"riddle": "水が氷になる温度は何度？", "answer": "0度", "explanation": "水は0度で凍り、氷になります。"},
        {"riddle": "最も軽い元素は？", "answer": "水素", "explanation": "水素は元素の中で最も軽く、化学的には非常に反応性が高いです。"},
        {"riddle": "地球の周りを回る衛星は何？", "answer": "月", "explanation": "月は地球の唯一の自然衛星で、地球の周りを回っています。"},
    ]
}

# アプリのタイトル
st.title("なぞなぞに挑戦しよう！")

# キーワードの選択
st.header("なぞなぞを開始するキーワードを選んでください")
selected_topic = st.selectbox("キーワードを選んでください", options=list(riddle_data.keys()))

# なぞなぞのランダムな選択
riddle_list = riddle_data[selected_topic]
riddle = random.choice(riddle_list)

# なぞなぞの表示
st.subheader("なぞなぞ: " + riddle["riddle"])

# ユーザーの答えを入力
user_answer = st.text_input("答えを入力してください")

# 答えが入力された場合
if user_answer:
    # 解説を表示
    st.write("解説: " + riddle["explanation"])
    
    # 正解かどうかをチェック
    if user_answer.strip() == riddle["answer"]:
        st.success("正解です！")
    else:
        st.error(f"間違いです。正解は {riddle['answer']} です。")

# 次のなぞなぞに進むボタン
if st.button("次のなぞなぞ"):
    # 新しいなぞなぞを表示
    riddle = random.choice(riddle_list)
    st.subheader("なぞなぞ: " + riddle["riddle"])
    user_answer = st.text_input("答えを入力してください", key=random.randint(0, 1000))  # ランダムキーで状態更新
